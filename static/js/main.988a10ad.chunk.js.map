{"version":3,"sources":["core/util.js","components/Login.js","components/Search.js","components/PhotosGrid.js","components/Home.js","core/PrivateRoute.js","App.js","serviceWorker.js","core/FontAwesome.js","index.js"],"names":["isFormValid","errors","key","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","isLoggedIn","localStorage","getItem","Login","props","handleChange","event","target","value","name","setState","handleFocus","state","setErrorState","handleValidation","errMsg","validateUserName","validateEmail","validatePassword","error","length","match","toUpperCase","handleSubmit","preventDefault","userName","email","password","setItem","history","replace","this","formValid","className","onSubmit","type","onChange","onFocus","onBlur","disabled","React","Component","styles","searchMain","textAlign","searchBox","position","iconButton","Search","setSearchState","initialValue","input","useRef","useEffect","current","style","searchText","ref","placeholder","icon","PhotosGrid","imageTag","useState","loading","setLoading","images","setImages","then","m","mountainImages","birdImages","beachImages","foodImages","displayMessage","str","maxWidth","margin","padding","fontWeight","map","image","index","src","alt","searchTags","Home","searchState","searchTag","toLowerCase","changeSearchState","searchTxt","tag","onClick","PrivateRoute","component","redirectTo","rest","render","to","App","path","exact","Boolean","window","location","hostname","library","add","faSearch","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.988a10ad.chunk.js","sourcesContent":["export const checkAlphaNumeric = (str) => {\r\n  const pattern = /^[a-zA-Z0-9]+$/;\r\n  return str.match(pattern);\r\n}\r\n\r\nexport const checkValidEmail = (str) => {\r\n  const pattern = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/;\r\n  return str.toUpperCase().match(pattern);\r\n}\r\n\r\nexport const checkValidPassword = (str) => {\r\n  const pattern = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n  return str.match(pattern);\r\n}\r\n\r\nexport const isFormValid = (errors) => {\r\n  for (const key in errors) {\r\n    if (errors[key] !== '') {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport const setCookie = (cname, cvalue, exdays) => {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n  var expires = \"expires=\" + d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n  return localStorage.getItem('isLoggedIn') === \"true\";\r\n}\r\n","import React from 'react';\r\n\r\nimport '../css/login.scss';\r\n\r\nimport { checkAlphaNumeric, isFormValid, setCookie, isLoggedIn, checkValidEmail, checkValidPassword } from '../core/util';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: '',\r\n      email: '',\r\n      password: '',\r\n      errors: {\r\n        userName: null,\r\n        email: null,\r\n        password: null\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isLoggedIn()) {\r\n      this.props.history.replace('home');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (isLoggedIn()) {\r\n      return null;\r\n    }\r\n\r\n    const { userName, password, email, errors } = this.state;\r\n    const formValid = isFormValid(errors);\r\n\r\n    return (\r\n      <div className=\"login-main\">\r\n        <h3 className=\"login-heading\">Login</h3>\r\n        <form onSubmit={this.handleSubmit} className=\"form login-form\">\r\n          <div className=\"form-element-wrapper\">\r\n            <label className=\"form-label\">User Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              value={userName}\r\n              onChange={this.handleChange}\r\n              onFocus={this.handleFocus}\r\n              onBlur={this.handleValidation}\r\n              className={`form-element ${errors.userName ? 'error' : ''}`}\r\n            />\r\n            {errors.userName && (\r\n              <div className=\"error-message\">{errors.userName}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-element-wrapper\">\r\n            <label className=\"form-label\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              onFocus={this.handleFocus}\r\n              onBlur={this.handleValidation}\r\n              className={`form-element ${errors.email ? 'error' : ''}`}\r\n            />\r\n            {errors.email && (\r\n              <div className=\"error-message\">{errors.email}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-element-wrapper\">\r\n            <label className=\"form-label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              onFocus={this.handleFocus}\r\n              onBlur={this.handleValidation}\r\n              className={`form-element ${errors.password ? 'error' : ''}`}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"error-message\">{errors.password}</div>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!formValid}\r\n            className={`btn btn-blue login-btn ${formValid ? '' : 'disabled'}`}>Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleFocus = (event) => {\r\n    const name = event.target.name;\r\n    if (this.state.errors[name]) {\r\n      this.setErrorState(name, '');\r\n    }\r\n  }\r\n\r\n  handleValidation = (event) => {\r\n    const { name, value } = event.target;\r\n    let errMsg = '';\r\n    switch (name) {\r\n      case 'userName': {\r\n        errMsg = this.validateUserName(value);\r\n        break;\r\n      }\r\n      case 'email': {\r\n        errMsg = this.validateEmail(value);\r\n        break;\r\n      }\r\n      case 'password': {\r\n        errMsg = this.validatePassword(value);\r\n        break;\r\n      }\r\n      default: { }\r\n    }\r\n    this.setErrorState(name, errMsg);\r\n  }\r\n\r\n  validateUserName = (value) => {\r\n    let error = '';\r\n    if (value === '') {\r\n      error = 'User Name cannot be blank';\r\n    } else if (value.length < 8) {\r\n      error = 'User Name should be greater then 8 characters'\r\n    } else if (value.length > 50) {\r\n      error = 'User Name should be less than 50 characters'\r\n    } else if (!checkAlphaNumeric(value)) {\r\n      error = 'Username should only contain alphabets and numbers'\r\n    }\r\n\r\n    return error;\r\n  }\r\n\r\n  validateEmail = (value) => {\r\n    let error = '';\r\n    if (value === '') {\r\n      error = 'Email cannot be blank';\r\n    } else if (!checkValidEmail(value)) {\r\n      error = 'Please enter a valid email id';\r\n      // ^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$\r\n    }\r\n\r\n    return error;\r\n  }\r\n\r\n  validatePassword = (value) => {\r\n    let error = '';\r\n    if (value === '') {\r\n      error = 'Password cannot be blank'\r\n    } else if (value.length < 8) {\r\n      error = 'Password should be greater then 8 characters'\r\n    } else if (value.length > 50) {\r\n      error = 'Password should be less than 50 characters'\r\n    } else if (!checkValidPassword(value)) {\r\n      error = 'Password should contain at least one letter, a special character and a number'\r\n    }\r\n\r\n    return error;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // check user credentials not in scope!\r\n    if (!isFormValid()) {\r\n      return;\r\n    }\r\n    const { userName, email, password } = this.state;\r\n    localStorage.setItem('isLoggedIn', true);\r\n    setCookie('USER_NAME', userName, 1);\r\n    setCookie('EMAIL', email, 1);\r\n    setCookie('PASSWORD', password, 1);\r\n    this.props.history.replace('home');\r\n  }\r\n\r\n  setErrorState = (name, errMsg) => {\r\n    this.setState(state => ({\r\n      errors: {\r\n        ...state.errors,\r\n        [name]: errMsg\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Search = ({ setSearchState, initialValue }) => {\r\n\r\n  const input = useRef('hello');\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    const searchText = input.current.value;\r\n    setSearchState(searchText);\r\n  }\r\n\r\n  useEffect(() => {\r\n    input.current.value = initialValue;\r\n  });\r\n\r\n  return (\r\n    <div style={styles.searchMain}>\r\n      <form onSubmit={handleSearch}>\r\n        <span style={styles.searchBox}>\r\n          <input type=\"text\" ref={input} placeholder=\"Search...\" />\r\n          <button type=\"submit\" className=\"icon-inside search-btn\">\r\n            <FontAwesomeIcon icon={['fas', 'search']} />\r\n          </button>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  searchMain: {\r\n    textAlign: 'center'\r\n  },\r\n  searchBox: {\r\n    position: 'relative'\r\n  },\r\n  iconButton: {\r\n    position: 'absolute'\r\n  }\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport '../css/photos-grid.scss';\r\n\r\nconst PhotosGrid = ({ imageTag }) => {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [images, setImages] = useState([]);\r\n\r\n  function fetchImages() {\r\n    import('../core/images').then(m => {\r\n      if (imageTag === 'mountain') {\r\n        setImages(m.mountainImages);\r\n      } else if (imageTag === 'bird') {\r\n        setImages(m.birdImages);\r\n      } else if (imageTag === 'beach') {\r\n        setImages(m.beachImages);\r\n      } else if (imageTag === 'food') {\r\n        setImages(m.foodImages);\r\n      } else {\r\n        setImages([]);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, [imageTag]);\r\n\r\n  const displayMessage = (str) => {\r\n    return (\r\n      <div style={{ maxWidth: '500px', margin: '0 auto', padding: '100px 0', fontWeight: 'bold', textAlign: 'center' }}>\r\n        {str}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"photo-grid-main\">\r\n      {\r\n        loading === true ?\r\n          displayMessage('Loading...') :\r\n          (\r\n            <div className=\"photo-card-wrapper\">\r\n              {images.length > 0 ?\r\n                images.map((image, index) => (\r\n                  <img src={image} className=\"photo-card\" key={index} alt=\"\" />\r\n                )) :\r\n                displayMessage('No Images to show')\r\n              }\r\n            </div>\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotosGrid;\r\n","import React, { useState } from 'react';\r\n\r\nimport '../css/home.scss';\r\n\r\nimport Search from './Search';\r\nimport PhotosGrid from './PhotosGrid';\r\n\r\nexport const Home = () => {\r\n\r\n  const [searchState, setSearchState] = useState('Mountain');\r\n  const searchTag = searchState.toLowerCase();\r\n  const initialSearchValue = '';\r\n\r\n  const changeSearchState = (searchTxt) => {\r\n    setSearchState(searchTxt);\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-main\">\r\n      <div className=\"home-container\">\r\n        <div className=\"search-input-main\">\r\n          <Search setSearchState={changeSearchState} initialValue={initialSearchValue} />\r\n        </div>\r\n        <div className=\"search-tags-main media-friendly-flex\">\r\n          {\r\n            searchTags.map((tag, index) => (\r\n              <button type=\"button\"\r\n                key={index}\r\n                onClick={() => changeSearchState(tag)}\r\n                className={`btn btn-white search-tags-btn ${tag.toLowerCase() === searchTag ? 'active' : ''}`}\r\n              >\r\n                {tag}\r\n              </button>\r\n            ))\r\n          }\r\n        </div>\r\n        <PhotosGrid imageTag={searchTag} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst searchTags = ['Mountain', 'Beach', 'Bird', 'Food'];\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { isLoggedIn } from './util';\r\n\r\nconst PrivateRoute = ({ component: Component, redirectTo, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={props => (\r\n      isLoggedIn() ?\r\n        <Component {...props} />\r\n        : <Redirect to={redirectTo} />\r\n    )} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport PrivateRoute from './core/PrivateRoute';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/photos/\" exact component={Login} />\n      <PrivateRoute path=\"/photos/home\" exact component={Home} />\n      <Redirect to=\"/photos/\" />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n// import { faArrowLeft } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(faSearch);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport './core/FontAwesome';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}